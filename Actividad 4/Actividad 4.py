# -*- coding: utf-8 -*-
"""ACTIVIDAD DE HOY

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f25f_OnI6HuEMcuBTxGdhb5V_icGExNk
"""

import matplotlib.pyplot as plt
import numpy as np

def sigmond(t):
  return 1 / (1 + np.exp(-t))

t = np.arange(-10, 10, 0.5)
y = sigmond(t)

plt.figure(figsize=(6,3))
plt.plot(t, y); plt.grid();
plt.show()

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
x,y=load_iris(return_X_y=True)
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.5, random_state=0)
clf=DecisionTreeClassifier()
clf.fit(x_train,y_train)
y_pred=clf.predict(x_test)
N= y_test.shape[0]
C=(y_test==y_pred).sum()
print("Total points: %d Correctly labeled points: %d" %(N,C))

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
x,y=load_iris(return_X_y=True)
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.5, random_state=0)
clf=DecisionTreeClassifier()
clf.fit(x_train,y_train)
y_pred=clf.predict(x_test)
N= y_test.shape[0]
C=(y_test==y_pred).sum()
print("Total points: %d Correctly labeled points: %d" %(N,C))

from sklearn.tree import plot_tree #Importa las funciones del arbol de decisicion
import matplotlib.pyplot as plt #Importa la libreria para graficar
from sklearn.datasets import load_iris #Utiliza conjunto de datos de muestra y load iris toma muestra de iris
#como ejemplo para imprimir el grafico como ejemplo

iris = load_iris()  # Carga el conjunto de datos del iris dentro del arbol de decision

plt.figure(figsize=(10,8)) #Crea la figura con un tama√±o de 12x8

plot_tree(clf, filled=True, # Rellena los nodos para una mejor visualizacion
          feature_names=iris.feature_names,  # se usa el atributo nombre feature_names
          #Toma un nombre o caractaristica
          class_names=iris.target_names)  # se usa el atributo target_names con el cual nombramos el objeto
#Imprimimos el arbol de decision
plt.show()