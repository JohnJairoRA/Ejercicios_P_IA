{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1b7rcOxgmPwt5zuZsPid8ZL539d2l8jxz","timestamp":1728091587640}],"authorship_tag":"ABX9TyOPBgP9r8Nve35JBj1NOZbE"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["#Ejercicio 1 Tupla\n","#Datos de un estudiante\n","print(\"**********ASIGNATURAS ESTUDIANTE**********\")\n","print(\"Bienvenido al programa para validar las asignaturas que no cumpliste\")\n","print(\"las asignaturas del curso son:\" )\n","\n","Lista_asignaturas = [\"matematicas\",\"Fisica\",\"Quimica\",\"Historia\", \"lenguas\"]\n","for asignatura in Lista_asignaturas:\n","  print(asignatura)\n"],"metadata":{"id":"9Yso7JMLS86J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Ejercicio 2 Lista cerrrada\n","Asignatura = [\"Matematicas\", \"Fisica\", \"Quimica\", \"Historia\", \"Lenguas\"]\n","input(\"ingrese la asignatura que desea verificar: \")\n","for Asignatur in Asignatura:\n","  print (f\"Yo estudio ,{Asignatur}\")\n","\n","#Lista_asignaturas=[]\n","#while True:\n","  #asignatura =input(\"ingrese una asignatura(0 'ok' para finalizar):\")\n","  #if asignatura.lower() == 'fin': #lower pasa lo que contiene asignatura a mayuscula\n","    #break\n","  #else:\n","    #Lista_asignaturas.append(asignatura)\n","#print(\"las asignaturas ingresadas son:\")\n","#for asignatura in Lista_asignaturas:\n","    #print(f\"yo estudio {asignatura}\")\n","\n"],"metadata":{"id":"UHdTksFDc4yF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Ejercicio 3 Diccionario\n","nombre = input(\"Cual es tu nombre:\" )\n","edad = int(input(\"Cual es tu edad:\"))\n","direccion  = input(\"Cual es tu direccion:\")\n","telefono  = int(input(\"Cual es tu numero telefonico:\"))\n","usuario = {\"nombre\": nombre, \"edad\": edad, \"direccion\": direccion, \"telefono\": telefono, }\n","print (usuario)\n"],"metadata":{"id":"zKKL0hB1fMyB","collapsed":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Ejercicio 4\n","print (\"Bienvenido al programa de asignaturas estudiante\")\n","print(\"Ingresa tus datos:\")\n","print(\"*********************************************\")\n","persona = {\n","    \"nombre\": input(\"ingrese su nombre:\"),\n","    \"edad\": input(\"ingrese su edad:\"),\n","    \"direccion\": input(\"ingrese su direccion:\"),\n","    \"telefono\": input(\"ingrese su telefono:\")\n","}\n","print(persona)\n","print(\"*********************************************\")\n","\n","print (\"Ingresa tus notas:\")\n","print(\"*********************************************\")\n","\n"," # creamos una lista llamada repetir lista vacia\n","Repetir = []\n","\n","# iteramos atraves de las notas para obtener las calificaciones\n","for nota in \"tus_notas\": #reemplazamos tus_notas por nota\n","    while True:  # utilizamos un ciclo while para validar si es verdadero\n","        try: #Lo usamos para utilizar una excepcion\n","#Utilizamos un valor que el usuario ingresara llamado nota_valor utilizando\n","#float para representar un valor positivo y negativo en nota se almacenara en la\n","#lista en un rango de 0 a 10 valor de la calificacion\n","            nota_valor = float(input(f\"ingrese la nota de la asignatura {nota} (0-10):\"))\n","#si 0 es menor o igual a el valor que ingresa eñ usuario finaliza el ciclo\n","            if 0 <= nota_valor <= 10:\n","                break #fin del ciclo\n","            else: #se imprimira que ingrese un numero valido\n","                print(\"numero de nota errada. Ingrese un valor valido entre 0 y 10.\")\n","        except ValueError: #usamos una excepcion cuando indique un valor errado dentro de try\n","                #valueerror es el valor incorrecto que ingresa el usuario\n","            print(\"valor invalido. Por favor ingrese un número.\")\n","            #Se imprimira\n","\n","    #Si el valor ingresado es menor a 5\n","    if nota_valor < 5:\n","        Repetir.append(nota)\n","  #Hace un llamado de la lista e ingresa los datos con append a la lista nota\n","\n","#si repetir cumple las condiciones imprimira de la lista nota en Repetir\n","if Repetir:\n","    print(\"reprobaste debes repetir:\")\n","    for nota in Repetir: #\n","        print(nota)\n","#Si el valor es mayor a 5 imprimira que aprobo las notas\n","else:\n","    print(\"¡Felicidades! pasaste tus notas.\")\n","\n","#Si el usuario desea validar la nota de otro estudiante podra repetir el ciclo\n","Deseas_continuar = input(\"¿DEseas ingresar notas de otro estudiante? (s/n):\")\n","if Deseas_continuar.lower() != \"s\":\n","    pass #Su uso es para bucles que no se le ha determinado una funcion en este caso sirve para evitar errores\n","\n"],"metadata":{"id":"Wmj2igMDsCE0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Ejercicio numero 5\n","#Imprimirmos el programa de facturas con un saludo\n","print (\"Bienvenido a tus facturas\")\n","#creamos un direccionario vacio para almacenar las facturas\n","facturas = {}\n","#Creamos un ciclo while no un menu opcional para el usuario\n","while True:\n","  print(\"1. Añadir factura\")\n","  print(\"2. pagar factura\")\n","  print(\"1. salir\")\n","  opcion = int(input(\"selecciona la accion que deseas realizar\"))\n","#Si la opcion es = 1 entonces\n","  if opcion == 1:\n","    n_factura =int(input(\"ingrese el numero de factura:\"))\n","#Agregamos los costos de la factura en decimales el usuario ingresara el dato\n","    costo = float(input(\"ingrese el costo de la factura:\"))\n","#llamamos el diccionario vacio a n_factura el valor que ingresa el usuario ingresando el costo\n","    facturas[n_factura] = costo\n","#Mostraremos el mensaje de factura ingresada correctamente\n","    print(\"factura ingresada correctamente.\")\n","#Entonces si el usuario escoge 2\n","  elif opcion == 2:\n","#llamamos nuevamente n_facturas para que ingrese el valor\n","    n_factura = int(input(\"ingrese el numero de factura a pagar:\"))\n","#factura lo destinamos numero de facturas para que se almacene en el diccionario facturas\n","    if n_factura in facturas: #Indentation fixed here\n","      costo = facturas[n_factura] #Indentation fixed here\n","      print (f\"la factura {n_factura} tiene un costo de {costo}\") #Indentation fixed here\n","# Se finaliza el ciclo con la opcion 3\n","  elif opcion == 3:\n","    break\n","#Error si ingresa el usuario una opcion no valida el programa mostrara un mensaje.\n","  else:\n","#mostrando un mensaje invalido hasta que se cumpla la condicion\n","    print(\"opcion invalida. Por favor selecciona una opcion valida.\")\n","#Calcular los totales\n","#Nombramos la funcion total cobrado\n","total_cobrado = sum(facturas.values())\n","#Que sera la suma de las facturas en valores ingresados por el usuario\n","#Los pendientes_totales seran la suma de los valores ingresados de las facturas\n","pendientes_totales= sum(facturas.values())\n","\n","#Se imprime el total de el valor cobrado por la factura y el tota de pendientes de la facturas\n","print(f\"Total cobrado: {total_cobrado}\")\n","print(f\"Total pendientes: {pendientes_totales}\")\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"dP26SJL-Alk7"},"execution_count":null,"outputs":[]}]}